@using Quarantine_Management.Function
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor
@{
    DateTime dt = DateTime.Now;
    var Month = dt.ToString("MMMM");
}

<style>
    .container {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 12px;
        cursor: pointer;
        font-size: 12px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    .modal-header {
        background-color: #28a745;
        border-bottom: none;
        padding: 1rem 1.5rem;
        border-radius: 0.5rem 0.5rem 0 0;
    }

    .modal-content {
        border: none;
        border-radius: 0.5rem;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }




    .required {
        color: #e74c3c;
        margin-left: 0.25rem;
    }

    .btn-submit {
        border: none;
        border-radius: 0.25rem;
        padding: 0.6rem 1.5rem;
        font-weight: 600;
        letter-spacing: 0.5px;
        transition: all 0.3s;
        box-shadow: 0 3px 5px rgba(46, 204, 113, 0.2);
    }

    .modal-body {
        padding: 1.5rem;
    }

    .form-card {
        background-color: #f8f9fa;
        border-radius: 0.5rem;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        transition: all 0.3s ease;
        display: flex;
        flex-direction: column;
        height: 100%; /* This will make both cards take up the full height of their parent */
    }

    .row {
        display: flex;
        flex-wrap: wrap;
    }

    .col-md-6 {
        display: flex;
        flex-direction: column;
    }

    .form-card:hover {
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }

    .form-card-title {
        font-size: 1rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 1.25rem;
        border-bottom: 2px solid #3dcd58;
        padding-bottom: 0.5rem;
    }


    #manual .select2-container {
        width: 50% !important;
    }

    .input-group {
        display: flex;
        width: 100%;
    }

    .input-group-prepend {
        display: flex;
    }

    .input-group-text {
        display: flex;
        align-items: center;
    }

</style>

<div class="content">
    <div class="container-fluid">
        <div class="row pt-2">
            <div class="col-lg-12 mt-2 mb-2">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-3">
                            <div class="d-flex">
                                <h2 class="text-dark fw-bold"><i class='fa fa-file'></i></h2>
                                <h2 class="text-dt fw-bold">&nbsp;User Management</h2>
                            </div>
                            <div>
                                <button class="btn btn-success btn-sm" onclick="addData()">
                                    <i class="fa fa-plus"></i> Add User
                                </button>
                                <button class="btn btn-secondary btn-sm" onclick="DownloadData()">
                                    <i class="fa fa-download"></i> Download Data
                                </button>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div div class="col-lg-3 col-md-2 col-sm-6">
                                <div class="form-group">
                                    <label class="font-weight-bold" style="font-size:10pt;">User Name</label>
                                    <select class="form-control form-control-sm text-center" id="nameFilter"></select>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-2 col-sm-6">
                                <div class="form-group">
                                    <label class="font-weight-bold" style="font-size:10pt;">Role</label>
                                    <select class="form-control form-control-sm text-center" id="roleFilter"></select>
                                </div>
                            </div>
                            <div class="col-lg-1 col-md-1 col-sm-6">
                                <label style="font-size:10pt;"></label>
                                <div>
                                    <button id="btn_apply" name="btn_apply" onclick="applyfilter()" class="btn btn-primary btn-sm btn-block mt-2"><i class="fa fa-search mr-1"></i></button>
                                </div>
                            </div>
                            <div class="col-lg-1 col-md-1 col-sm-6">
                                <label style="font-size:10pt;"></label>
                                <div>
                                    <button id="btn_reset" name="btn_reset" class="btn btn-sm btn-danger btn-block mt-2" onclick="window.location.reload()"><i class="fa fa-history mr-1"></i> </button>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-lg-12 col-md-12 col-sm-12">
                                <div id="spinner_loading" class="text-center mt-2">
                                    <i class="fas fa-spinner fa-spin fa-lg" style="font-size:30pt;"></i>
                                </div>
                                <div class="table-responsive" id="table_details" style="overflow-x: auto; white-space: nowrap; scrollbar-width: thin; scroll-behavior: smooth;">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="modal_add" class="modal fade" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header bg-success">
                <h5 class="text-white font-weight-bold">
                    <i class="fa fa-user-plus mr-2"></i>Add New User
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-card" id="scan">
                            <h6 class="form-card-title">
                                <i class="fas fa-id-card mr-2"></i>User Information
                            </h6>
                            <div class="form-group">
                                <label>Sesa ID<span class="required">*</span></label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-fingerprint text-muted"></i>
                                        </span>
                                    </div>
                                    <input type="text" id="sesaADD" class="form-control" placeholder="Enter SESA ID">
                                </div>
                            </div>
                            <div class="form-group">
                                <label>User Name<span class="required">*</span></label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-user text-muted"></i>
                                        </span>
                                    </div>
                                    <input type="text" id="usernameAdd" class="form-control" placeholder="Enter username">
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Email<span class="required">*</span></label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-envelope text-muted"></i>
                                        </span>
                                    </div>
                                    <input type="email" id="emailAdd" class="form-control" placeholder="Enter email address">
                                </div>
                            </div>
                            <div class="form-group mb-0">
                                <label>Password<span class="required">*</span></label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-lock text-muted"></i>
                                        </span>
                                    </div>
                                    <input type="password" id="passwordAdd" class="form-control" placeholder="Enter password">
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Level<span class="required">*</span></label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-user-tag text-muted"></i>
                                        </span>
                                    </div>
                                    <select class="form-control" id="levelAdd">
                                    </select>
                                </div>
                            </div> 
                            <div class="form-group">
                                <label>Role<span class="required">*</span></label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-user-cog"></i>
                                        </span>
                                    </div>
                                    <select class="form-control" id="roleAdd">
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="text-center mt-3">
                    <button class="btn btn-submit px-4 bg-success text-white" id="create_Data">
                        <i class="fas fa-save mr-2"></i> Submit
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="modal_edit" class="modal fade" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header bg-success">
                <h5 class="text-white font-weight-bold">
                    <i class="fa fa-user-edit mr-2"></i>Update Data
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-card" id="scan">
                            <h6 class="form-card-title">
                                <i class="fas fa-id-card mr-2"></i>User Information
                            </h6>
                            <div class="form-group">
                                <input type="hidden" id="id_user" class="form-control"></input>
                                <label>Sesa ID<span class="required">*</span></label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-fingerprint text-muted"></i>
                                        </span>
                                    </div>
                                    <input type="text" id="sesaEdit" class="form-control">

                                </div>
                            </div>
                            <div class="form-group">
                                <label>User Name<span class="required">*</span></label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-user text-muted"></i>
                                        </span>
                                    </div>
                                    <input type="text" id="usernameEdit" class="form-control">
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Email<span class="required">*</span></label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-envelope text-muted"></i>
                                        </span>
                                    </div>
                                    <input type="email" id="emailEdit" class="form-control">
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Level<span class="required">*</span></label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-user-tag text-muted"></i>
                                        </span>
                                    </div>
                                    <select class="form-control" id="levelEdit">
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Role<span class="required">*</span></label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-user-cog"></i>
                                        </span>
                                    </div>
                                    <select class="form-control" id="roleEdit">
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                   
                </div>
                <div class="text-center mt-3">
                    <button class="btn btn-submit px-4 bg-success text-white" id="update_data">
                        <i class="fas fa-save mr-2"></i> Update
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let isSearch = false;
        var loading = "<div class='text-center'><i class='fa fa-4x fa-spinner fa-spin'></i></div>";
        $(document).ready(function () {
            $.ajax({
                url: "@Url.Action("GetFilterDate")",
                type: "POST",
                success: function (data) {
                    $('#date_from').val(data[0].date_From);
                    $('#date_to').val(data[0].date_To);
                    applyfilter();
                }
            });



            var date_from = $('#date_from').val();
            var date_to = $('#date_to').val();
        });

        function applyfilter() {
            var name = $('#nameFilter option:selected').text();
            var roles = $('#roleFilter option:selected').text();

            $("#table_details").html('');
            var table = $("#table_details");
            var table1 = $("#tbl_details_filter");

            $.ajax({
                url: "@Url.Action("GetAllDataUser")",
                type: "Get",
                data: {
                    name: name,
                    roles: roles
                },
                success: function (data) {
                    table.html(data);
                    $("#table_details").attr('hidden', false);
                    $("#table_details #tbl_details_filter").DataTable({
                        "paging": true,
                        "ordering": true,
                        "info": false,
                        "scrollX": false,
                        "searching": true,
                        "lengthChange": true,
                        "fixedHeader": true,
                        "initComplete": function (settings, json) {
                            $("#tbl_details_filter").wrap("<div style='overflow:auto; width:100%;position:relative;'></div>");
                        },
                    });
                },
                complete: function () {
                    $('#spinner_loading').hide();
                }
            });
        }

        $(document).ready(function () {
            // Initialize Name Filter
            $('#nameFilter').select2({
                placeholder: 'Select User Name',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetNameFilter")",
                    async: false,
                    data: function (params) {
                        return {
                            cell: params.term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data.items
                        }
                    },
                }
            });

            // Initialize Role Filter
            $('#roleFilter').select2({
                placeholder: 'Select Role',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetRoleFilter")",
                    async: false,
                    data: function (params) {
                        return {
                            cell: params.term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data.items
                        }
                    },
                }
            });
            $('#roleAdd').select2({
                placeholder: 'Select Role',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetRoleFilter")",
                    async: false,
                    data: function (params) {
                        return {
                            cell: params.term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data.items
                        }
                    },
                }
            });

            $('#roleEdit').select2({
                placeholder: 'Select Role',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetRoleFilter")",
                    async: false,
                    data: function (params) {
                        return {
                            cell: params.term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data.items
                        }
                    },
                }
            });

            $('#levelAdd').select2({
                placeholder: 'Select Level',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetLevelFilter")",
                    async: false,
                    data: function (params) {
                        return {
                            cell: params.term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data.items
                        }
                    },
                }
            });

            $('#levelEdit').select2({
                placeholder: 'Select Level',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetLevelFilter")",
                    async: false,
                    data: function (params) {
                        return {
                            cell: params.term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data.items
                        }
                    },
                }
            });

            // Initialize Plant Filter
            $('#plantFilter').select2({
                placeholder: 'Select Plant',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetPLantFilter")",
                    async: false,
                    data: function (params) {
                        return {
                            cell: params.term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data.items
                        }
                    },
                }
            });
            $('#plantAdd').select2({
                placeholder: 'Select Plant',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetPLantFilter")",
                    async: false,
                    data: function (params) {
                        return {
                            cell: params.term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data.items
                        }
                    },
                }
            });
            $('#plantEdit').select2({
                placeholder: 'Select Plant',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetPLantFilter")",
                    async: false,
                    data: function (params) {
                        return {
                            cell: params.term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data.items
                        }
                    },
                }
            });
            $('#levelAdd').select2({
                placeholder: 'Select Level',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetLevelFilter")",
                    async: false,
                    data: function (params) {
                        return {
                            cell: params.term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data.items
                        }
                    },
                }
            });

            $('#levelEdit').select2({
                placeholder: 'Select Level',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetLevelFilter")",
                    async: false,
                    data: function (params) {
                        return {
                            cell: params.term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data.items
                        }
                    },
                }
            });
        });

        function addData() {
            $('#modal_add').modal('show');
        }

        $("#create_Data").click(function () {
            var sesa_id = $('#sesaADD').val();
            var name = $('#usernameAdd').val();
            var email = $('#emailAdd').val();
            var password = $('#passwordAdd').val();
            var role = $("#roleAdd option:selected").text();
            var level = $("#levelAdd").val();

            if (sesa_id == '' || name == '' || email == '' || password == '' || role == '' || level == '') {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Please fill in all the required fields!'
                });
            } else {
                Swal.fire({
                    title: 'Add New User Data?',
                    text: "Are you sure you want to add this new user data?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#28a745',
                    cancelButtonColor: '#dc3545',
                    confirmButtonText: 'Yes!',
                    cancelButtonText: 'No!',
                    showLoaderOnConfirm: true,
                    preConfirm: function () {
                        return new Promise(function (resolve, reject) {
                            $.ajax({
                                type: "POST",
                                async: false,
                                url: "@Url.Action("AddNewUser", "Admin")",
                                data: {
                                    sesa_id: sesa_id,
                                    name: name,
                                    email: email,
                                    password: password,
                                    role: role,
                                    level : level
                                },
                                success: function (data) {
                                    if (data.items === 1) {
                                        Swal.fire(
                                            'Added!',
                                            'New user has been added.',
                                            'success'
                                        );
                                    } else if (data.items === -1) {
                                        Swal.fire(
                                            'Duplicate!',
                                            'User data already exists.',
                                            'error'
                                        );
                                    }
                                    window.location.href = '@Url.Action("UserManagement", "Admin")';
                                },
                                complete: function () {
                                    $('#spinner_loading').hide();
                                }
                            });
                        });
                    }
                });
            }
        });

        function btn_update(id_user, sesa_id, name, email, level, roles) {
            $('#id_user').val(id_user);
            $('#sesaEdit').val(sesa_id);
            $('#usernameEdit').val(name);
            $('#emailEdit').val(email);

            $('#levelEdit').empty();
            if (level) {
                $('#levelEdit').append(new Option(level, level, true, true));
            }


            $('#roleEdit').empty();
            if (roles) {
                $('#roleEdit').append(new Option(roles, roles, true, true));
            }

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetUserDataDetail")",
                data: {
                    id_user: id_user
                },
                success: function (data) {

                    $("#modal_edit").modal("show");

                }
            })
        }
        $("#update_data").click(function () {
            var id_user = $('#id_user').val();
            var sesa_id = $('#sesaEdit').val();
            var name = $('#usernameEdit').val();
            var email = $('#emailEdit').val();
            var role = $("#roleEdit option:selected").text();
            var level = $("#levelEdit").val();

            if (sesa_id == '' || name == '' || email == '' || role == '' || level == '' ) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Please fill in all the required fields!'
                });
            } else {
                Swal.fire({
                    title: 'Update User Data?',
                    text: "Are you sure you want to update this user data?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#28a745',
                    cancelButtonColor: '#dc3545',
                    confirmButtonText: 'Yes!',
                    cancelButtonText: 'No!',
                    showLoaderOnConfirm: true,
                    preConfirm: function () {
                        return new Promise(function (resolve, reject) {
                            $.ajax({
                                type: "POST",
                                url: "@Url.Action("UpdateDataUser", "Admin")",
                                data: {
                                    id_user: id_user,
                                    sesa_id: sesa_id,
                                    name: name,
                                    email: email,
                                    role: role,
                                    level : level
                                },
                                success: function (data) {
                                    console.log("Success response:", data);
                                    if (data.success) {
                                        Swal.fire({
                                            title: 'Updated Successfully!',
                                            text: 'User Data Updated Successfully!',
                                            icon: 'success'
                                        }).then(function () {
                                            window.location.href = '@Url.Action("UserManagement", "Admin")';
                                        });
                                    } else {
                                        Swal.fire('Error!', data.message || 'Failed to update the data.', 'error');
                                    }
                                },
                            });
                        });
                    }
                });
            }
        });

        function btn_delete(id_user) {
            if (id_user == '') {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Please select a user to delete!'
                });
            } else {
                Swal.fire({
                    title: 'Delete User?',
                    text: "Are you sure you want to delete this user data?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#28a745',
                    cancelButtonColor: '#dc3545',
                    confirmButtonText: 'Yes!',
                    cancelButtonText: 'No!',
                    showLoaderOnConfirm: true,
                    preConfirm: function () {
                        return new Promise(function (resolve, reject) {
                            $.ajax({
                                type: "POST",
                                url: "@Url.Action("DeleteDataUser", "Admin")",
                                data: {
                                    id_user: id_user
                                },
                                success: function (response) {
                                    if (response.success) {
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Success',
                                            text: 'User deleted successfully!'
                                        }).then(function () {
                                            window.location.reload();
                                        });
                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Error',
                                            text: response.message || 'Failed to delete user!'
                                        });
                                    }
                                },
                                error: function (xhr, status, error) {
                                    console.error("Delete error:", xhr.responseText);
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: 'An error occurred while deleting the user. Please try again.'
                                    });
                                },
                                complete: function () {
                                    $('#spinner_loading').hide();
                                }
                            });
                        });
                    }
                });
            }
        }

        function DownloadData() {
            var name = $('#nameFilter option:selected').text();
            var role = $('#roleFilter option:selected').text();
            window.location.href = "@Url.Action("DownloadDataUser", "Admin")?name=" + name + "&role=" + role;
        }

    </script>
}